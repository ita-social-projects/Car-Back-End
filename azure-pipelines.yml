trigger:
- azure_test_feature

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  
steps:

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'CarWebApi.zip'

- task: CopyFiles@2
  displayName: 'Copy Files to: root directory'
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: |
      CarWebApi.zip
    TargetFolder: '$(Build.SourcesDirectory)/'    
    OverWrite: false
    flattenFolders: true
    
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '**/*.zip'
    cleanDestinationFolder: false
    overwriteExistingFiles: false
    
- task: DeleteFiles@1
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/'    

- task: CopyFiles@2
  displayName: 'Copy Files to: root directory'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      appsettings.json
      appsettings.Development.json
      appsettings.Production.json
    TargetFolder: '$(Build.StagingDirectory)/Car.temp'    
    OverWrite: false
    flattenFolders: true

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '/*.sln'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'Car.Backend/Car.UnitTests/Car.UnitTests.csproj'
    publishTestResults: false
    
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'Car.Backend/Car.WebApi/Car.WebApi.csproj'
    
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

#Extract Car.WebApi.zip file to $(Build.StagingDirectory)/ folder
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(Build.StagingDirectory)/Car.WebApi.zip'
    destinationFolder: '$(Build.StagingDirectory)/Car.temp'
    cleanDestinationFolder: false
    overwriteExistingFiles: false
    
#Deleting Car.WebApi.zip
- task: DeleteFiles@1
  inputs:
    SourceFolder: '$(Build.StagingDirectory)/Car.WebApi.zip'    
    
#Archive file to Car.WebApi.zip
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.StagingDirectory)/Car.temp'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Car.WebApi.zip'
    replaceExistingArchive: true
    
#Deleting Car.temp folder
- task: DeleteFiles@1
  inputs:
    SourceFolder: '$(Build.StagingDirectory)/Car.temp' 
    
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'Car.BackEnd'
